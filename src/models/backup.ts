/* tslint:disable */
/* eslint-disable */
/**
 * ODIN Fleet API
 * API to access Odin Fleet, empowering developers to deploy gameservers all around the world in just a few lines of code.
 *
 * The version of the OpenAPI document: 0.8.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BackupType } from './backup-type';
import {
    BackupTypeFromJSON,
    BackupTypeFromJSONTyped,
    BackupTypeToJSON,
} from './backup-type';

/**
 * 
 * @export
 * @interface Backup
 */
export interface Backup {
    /**
     * The name of the backup
     * @type {string}
     * @memberof Backup
     */
    name: string;
    /**
     * The name of the stored archive
     * @type {string}
     * @memberof Backup
     */
    archiveName: string;
    /**
     * The method of the archive
     * @type {BackupType}
     * @memberof Backup
     */
    backupMethod: BackupType;
    /**
     * The AWS region the backup is stored at
     * @type {string}
     * @memberof Backup
     */
    awsRegion: string;
    /**
     * The timestamp of the backups creation
     * @type {Date}
     * @memberof Backup
     */
    createdAt: Date;
    /**
     * $restoredAt The timestamp of when the backup was restored, null if not restored
     * @type {Date}
     * @memberof Backup
     */
    restoredAt: Date | null;
}

/**
 * Check if a given object implements the Backup interface.
 */
export function instanceOfBackup(value: object): value is Backup {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('archiveName' in value) || value['archiveName'] === undefined) return false;
    if (!('backupMethod' in value) || value['backupMethod'] === undefined) return false;
    if (!('awsRegion' in value) || value['awsRegion'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('restoredAt' in value) || value['restoredAt'] === undefined) return false;
    return true;
}

export function BackupFromJSON(json: any): Backup {
    return BackupFromJSONTyped(json, false);
}

export function BackupFromJSONTyped(json: any, ignoreDiscriminator: boolean): Backup {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'archiveName': json['archiveName'],
        'backupMethod': BackupTypeFromJSON(json['backupMethod']),
        'awsRegion': json['awsRegion'],
        'createdAt': (new Date(json['createdAt'])),
        'restoredAt': (json['restoredAt'] == null ? null : new Date(json['restoredAt'])),
    };
}

export function BackupToJSON(value?: Backup | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'archiveName': value['archiveName'],
        'backupMethod': BackupTypeToJSON(value['backupMethod']),
        'awsRegion': value['awsRegion'],
        'createdAt': ((value['createdAt']).toISOString()),
        'restoredAt': (value['restoredAt'] == null ? null : (value['restoredAt'] as any).toISOString()),
    };
}

